---
- name: Insert tally controls for Enterprise Linux 5 pam auth section
  lineinfile:
    dest: /etc/pam.d/system-auth
    regexp: '^auth.*required.*pam_tally\.so.*'
    insertafter: '^auth.*required.*pam_env'
    line: "auth\trequired\tpam_tally.so per_user deny={{fail_deny}} onerr=fail {% if fail_unlock != 0 %}unlock_time={{fail_unlock}}{% endif %}"
    state: present
  when:
  - ansible_distribution_major_version == '5'

- name: Insert tally controls for Enterprise Linux 5 pam account section
  lineinfile:
    dest: /etc/pam.d/system-auth
    regexp: '^account.*required.*pam_tally\.so.*'
    insertafter: '^account.*required.*pam_unix'
    line: "account\trequired\tpam_tally.so"
    state: present
  when:
  - ansible_distribution_major_version == '5'

- name: Insert tally2 controls for Enterprise Linux 6 pam auth section
  lineinfile:
    dest: "{{ item }}"
    regexp: '^auth.*required.*pam_tally.*'
    insertafter: '^auth.*required.*pam_env'
    line: "auth\trequired\tpam_tally2.so deny={{fail_deny}} onerr=fail {% if fail_unlock != 0 %}unlock_time={{fail_unlock}}{% endif %}"
    state: present
  with_items:
  - /etc/pam.d/system-auth
  - /etc/pam.d/password-auth
  when:
  - ansible_distribution_major_version == '6'

- name: Insert tally2 controls for Enterprise Linux 6 pam account section
  lineinfile:
    dest: "{{ item }}"
    regexp: '^account.*required.*pam_tally.*'
    insertafter: '^account.*required.*pam_unix'
    line: "account\trequired\tpam_tally2.so"
    state: present
  with_items:
  - /etc/pam.d/system-auth
  - /etc/pam.d/password-auth
  when:
  - ansible_distribution_major_version == '6'

- name: Insert faillock controls for Enterprise Linux 7 pam auth section
  lineinfile:
    dest: "{{ item }}"
    regexp: '^auth.*required.*pam_(tally|faillock).*'
    insertafter: '^auth.*required.*pam_env'
    line: "auth\trequired\tpam_faillock.so preauth deny={{fail_deny}} {% if fail_unlock != 0 %}unlock_time={{fail_unlock}}{% endif %}"
    state: present
  with_items:
  - /etc/pam.d/system-auth
  - /etc/pam.d/password-auth
  when:
  - ansible_distribution_major_version == '7'

- name: Insert faillock controls for Enterprise Linux 7 pam account section
  lineinfile:
    dest: "{{ item }}"
    regexp: '^account.*required.*pam_(tally|faillock).*'
    insertbefore: '^account.*required.*pam_unix'
    line: "account\trequired\tpam_faillock.so"
    state: present
  with_items:
  - /etc/pam.d/system-auth
  - /etc/pam.d/password-auth
  when:
  - ansible_distribution_major_version == '7'

- name: Use pam_lastlog to set inactivity lockout on Enterprise Linux 5
  lineinfile:
    dest: /etc/pam.d/system-auth
    regexp: '^auth.*required.*pam_lastlog.so.*'
    insertafter: '^auth.*'
    line: "auth\trequired\tpam_lastlog.so inactive={{inactive_lock}}"
    state: "{{ 'absent' if (inactive_lock == 0) else 'present' }}"
  when:
  - ansible_distribution_major_version == '5'

- name: Use pam_lastlog to set inactivity lockout on Enterprise Linux 6/7
  lineinfile:
    dest: "{{ item }}"
    regexp: '^auth.*required.*pam_lastlog.so.*'
    insertafter: '^auth.*'
    line: "auth\trequired\tpam_lastlog.so inactive={{inactive_lock}}"
    state: "{{ 'absent' if (inactive_lock == 0) else 'present' }}"
  with_items:
  - /etc/pam.d/system-auth
  - /etc/pam.d/password-auth
  when:
  - ansible_distribution_major_version == '6' or ansible_distribution_major_version == '7'

- name: Configure lastlog database update for session logins on Enterprise Linux 5
  lineinfile:
    dest: /etc/pam.d/system-auth
    regexp: '^session.*optional.*pam_lastlog.so.*'
    insertafter: '^session.*'
    line: "session\toptional\tpam_lastlog.so silent"
    state: "{{ 'absent' if (inactive_lock == 0) else 'present' }}"
  when:
  - ansible_distribution_major_version == '5'

- name: Configure lastlog database update for session logins on Enterprise Linux 6/7
  lineinfile:
    dest: "{{ item }}"
    regexp: '^session.*optional.*pam_lastlog.so.*'
    insertafter: '^session.*'
    line: "session\toptional\tpam_lastlog.so silent"
    state: "{{ 'absent' if (inactive_lock == 0) else 'present' }}"
  with_items:
  - /etc/pam.d/system-auth
  - /etc/pam.d/password-auth
  when:
  - ansible_distribution_major_version == '6' or ansible_distribution_major_version == '7'

- name: Insert faillock authfail controls for Enterprise Linux7
  lineinfile:
    dest: "{{ item }}"
    regexp: '^auth.*\[default=die\].*pam_faillock.*'
    insertafter: '^auth.*sufficient.*pam_unix'
    line: "auth\t[default=die]\tpam_faillock.so authfail audit deny={{fail_deny}} {% if fail_unlock != 0 %}unlock_time={{fail_unlock}}{% endif %}"
    state: present
  with_items:
  - /etc/pam.d/system-auth
  - /etc/pam.d/password-auth
  when:
  - ansible_distribution_major_version == '7'

- name: Add unix.so based password history for Enterprise Linux 5
  lineinfile:
    dest: /etc/pam.d/system-auth
    regexp: '^password.*sufficient.*pam_unix\.so.*'
    insertbefore: '^password.*required.*pam_deny'
    line: "password\tsufficient\tpam_unix.so sha512 shadow remember={{passhistory}} nullok try_first_pass use_authtok"
    state: present
  when:
  - ansible_distribution_major_version == '5'

- name: Add unix.so based password history for Enterprise Linux 6
  lineinfile:
    dest: "{{ item }}"
    regexp: '^password.*sufficient.*pam_unix\.so.*'
    insertbefore: '^password.*required.*pam_deny'
    line: "password\tsufficient\tpam_unix.so sha512 shadow remember={{passhistory}} nullok try_first_pass use_authtok"
    state: present
  with_items:
  - /etc/pam.d/system-auth
  - /etc/pam.d/password-auth
  when:
  - ansible_distribution_major_version == '6'

- name: Remove unix.so based password history for Enterprise Linux 7
  lineinfile:
    dest: /etc/pam.d/system-auth
    regexp: '^password.*sufficient.*pam_unix\.so.*'
    insertbefore: '^password.*required.*pam_deny'
    line: "password\tsufficient\tpam_unix.so sha512 shadow nullok try_first_pass use_authtok"
    state: present
  with_items:
  - /etc/pam.d/system-auth
  - /etc/pam.d/password-auth
  when:
  - ansible_distribution_major_version == '7'

- name: Add pwhistory.so based password history for Enterprise Linux 7
  lineinfile:
    dest: /etc/pam.d/system-auth
    regexp: '^password.*required.*pam_pwhistory.*'
    insertbefore: '^password.*sufficient.*pam_unix'
    line: "password\trequired\tpam_pwhistory.so remember={{passhistory}} use_authtok"
    state: present
  with_items:
  - /etc/pam.d/system-auth
  - /etc/pam.d/password-auth
  when:
  - ansible_distribution_major_version == '7'

- name: configure password complexity for Enterprise Linux 5
  lineinfile:
    dest: /etc/pam.d/system-auth
    regexp: '^password.*requisite.*pam_cracklib.*'
    insertbefore: '^password.*sufficient.*pam_unix'
    line: "password\trequisite\tpam_cracklib.so try_first_pass retry=3 minlen={{pwquality_minlen}} dcredit={{pwquality_dcredit}} ucredit={{pwquality_ucredit}} lcredit={{pwquality_lcredit}} ocredit={{pwquality_ocredit}} maxrepeat={{pwquality_maxrepeat}}"
  when:
  - ansible_distribution_major_version == '5'

- name: configure password complexity for Enterprise Linux 6
  lineinfile:
    dest: "{{ item }}"
    regexp: '^password.*requisite.*pam_cracklib.*'
    insertbefore: '^password.*sufficient.*pam_unix'
    line: "password\trequisite\tpam_cracklib.so try_first_pass retry=3 minlen={{pwquality_minlen}} dcredit={{pwquality_dcredit}} ucredit={{pwquality_ucredit}} lcredit={{pwquality_lcredit}} ocredit={{pwquality_ocredit}} maxrepeat={{pwquality_maxrepeat}}"
  with_items:
  - /etc/pam.d/system-auth
  - /etc/pam.d/password-auth
  when:
  - ansible_distribution_major_version == '6'

- name: create pwquality.conf password complexity configuration for Enterprise Linux 7
  template:
    src: pwquality.conf.j2
    dest: /etc/security/pwquality.conf
    owner: root
    group: root
    mode: 0644
  when: ansible_distribution_major_version == '7'
